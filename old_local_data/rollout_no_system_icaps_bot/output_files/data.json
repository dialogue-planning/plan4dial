{
    "name": "order-pizza",
    "context_variables": {
        "invited-talk": {
            "type": "enum",
            "config": [
                "Beyond Distance Estimates: Reasoning about Solutions in Factored Transition Systems",
                "Multi-Agent Path Finding and Its Applications"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "morning-session": {
            "type": "enum",
            "config": [
                "Planning Representations and Scheduling",
                "Verification",
                "Reinforcement Learning",
                "Heuristics in Classical Planning"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "early-afternoon-session": {
            "type": "enum",
            "config": [
                "Model-Based Reasoning in Classical Planning",
                "Learning in Scheduling Applications",
                "Search",
                "Optimal Planning"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "afternoon-session": {
            "type": "enum",
            "config": [
                "Problem Reformulation",
                "Heuristics and Heuristic Search",
                "Multi-Agent Path Finding",
                "Deep Learning"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "evening-session": {
            "type": "enum",
            "config": [
                "Probabilistic Planning",
                "Multi-Agent Planning and Scheduling",
                "Hierarchical Task Networks",
                "Rewards in Reinforcement Learning"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "goal": {
            "type": "flag",
            "config": false
        },
        "have-message": {
            "type": "flag",
            "config": false
        },
        "force-statement": {
            "type": "flag",
            "config": false
        }
    },
    "intents": {
        "thank": {
            "variables": [],
            "utterances": [
                "Thank you!",
                "Thanks!",
                "thank",
                "thanks so much!",
                "have a good day!",
                "have a good night!",
                "thx",
                "ty"
            ],
            "type": "regular"
        },
        "share-invited-talk": {
            "variables": [
                "$invited-talk"
            ],
            "utterances": [
                "$invited-talk",
                "I want to see the invited talk on $invited-talk.",
                "I am really interested in the talk on $invited-talk.",
                "Can you schedule me in to watch the invited talk on $invited-talk?"
            ],
            "type": "regular"
        },
        "share-morning-session": {
            "variables": [
                "$morning-session"
            ],
            "utterances": [
                "$morning-session",
                "I want to see the session on $morning-session.",
                "I am really interested in the session on $morning-session.",
                "Can you schedule me in to watch the session on $morning-session?"
            ],
            "type": "regular"
        },
        "share-early-afternoon-session": {
            "variables": [
                "$early-afternoon-session"
            ],
            "utterances": [
                "$early-afternoon-session",
                "I want to see the session on $early-afternoon-session.",
                "I am really interested in the session on $early-afternoon-session.",
                "Can you schedule me in to watch the session on $early-afternoon-session?"
            ],
            "type": "regular"
        },
        "share-afternoon-session": {
            "variables": [
                "$afternoon-session"
            ],
            "utterances": [
                "$afternoon-session",
                "I want to see the session on $afternoon-session.",
                "I am really interested in the session on $afternoon-session.",
                "Can you schedule me in to watch the session on $afternoon-session?"
            ],
            "type": "regular"
        },
        "share-evening-session": {
            "variables": [
                "$evening-session"
            ],
            "utterances": [
                "$evening-session",
                "I want to see the session on $evening-session.",
                "I am really interested in the session on $evening-session.",
                "Can you schedule me in to watch the session on $evening-session?"
            ],
            "type": "regular"
        },
        "fallback": {
            "variables": [],
            "utterances": [],
            "type": "fallback"
        },
        "utter_msg": {
            "variables": [],
            "utterances": [],
            "type": "regular"
        }
    },
    "actions": {
        "get-invited-talk": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What invited talk do you want to see on Day 1? Your options are:\n\tBeyond Distance Estimates: Reasoning about Solutions in Factored Transition Systems\n\tMulti-Agent Path Finding and Its Applications"
            ],
            "condition": [
                [
                    "invited-talk",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "set-invited-talk",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "invited-talk": {
                                "value": "$invited-talk",
                                "variable": "invited-talk",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-invited-talk",
                        "name": "get-invited-talk_DETDUP_set-invited-talk-EQ-valid",
                        "assignments": {
                            "$invited-talk": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-invited-talk_DETDUP_set-invited-talk-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-invited-talk": {
                    "variables": [
                        "$invited-talk"
                    ],
                    "utterances": [
                        "$invited-talk",
                        "I want to see the invited talk on $invited-talk.",
                        "I am really interested in the talk on $invited-talk.",
                        "Can you schedule me in to watch the invited talk on $invited-talk?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "variables": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-morning-session": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What session do you want to see in the morning? Your options are:\n\tPlanning Representations and Scheduling\n\tVerification\n\tReinforcement Learning\n\tHeuristics in Classical Planning"
            ],
            "condition": [
                [
                    "morning-session",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "set-morning-session",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "morning-session": {
                                "value": "$morning-session",
                                "variable": "morning-session",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-morning-session",
                        "name": "get-morning-session_DETDUP_set-morning-session-EQ-valid",
                        "assignments": {
                            "$morning-session": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-morning-session_DETDUP_set-morning-session-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-morning-session": {
                    "variables": [
                        "$morning-session"
                    ],
                    "utterances": [
                        "$morning-session",
                        "I want to see the session on $morning-session.",
                        "I am really interested in the session on $morning-session.",
                        "Can you schedule me in to watch the session on $morning-session?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "variables": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-early-afternoon-session": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What session do you want to see in the early afternoon? Your options are:\n\tModel-Based Reasoning in Classical Planning\n\tLearning in Scheduling Applications\n\tSearch\n\tOptimal Planning"
            ],
            "condition": [
                [
                    "early-afternoon-session",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "set-early-afternoon-session",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "early-afternoon-session": {
                                "value": "$early-afternoon-session",
                                "variable": "early-afternoon-session",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-early-afternoon-session",
                        "name": "get-early-afternoon-session_DETDUP_set-early-afternoon-session-EQ-valid",
                        "assignments": {
                            "$early-afternoon-session": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-early-afternoon-session_DETDUP_set-early-afternoon-session-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-early-afternoon-session": {
                    "variables": [
                        "$early-afternoon-session"
                    ],
                    "utterances": [
                        "$early-afternoon-session",
                        "I want to see the session on $early-afternoon-session.",
                        "I am really interested in the session on $early-afternoon-session.",
                        "Can you schedule me in to watch the session on $early-afternoon-session?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "variables": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-afternoon-session": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What session do you want to see in the afternoon? Your options are:\n\tProblem Reformulation\n\tHeuristics and Heuristic Search\n\tMulti-Agent Path Finding\n\tDeep Learning"
            ],
            "condition": [
                [
                    "afternoon-session",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "set-afternoon-session",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "afternoon-session": {
                                "value": "$afternoon-session",
                                "variable": "afternoon-session",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-afternoon-session",
                        "name": "get-afternoon-session_DETDUP_set-afternoon-session-EQ-valid",
                        "assignments": {
                            "$afternoon-session": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-afternoon-session_DETDUP_set-afternoon-session-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-afternoon-session": {
                    "variables": [
                        "$afternoon-session"
                    ],
                    "utterances": [
                        "$afternoon-session",
                        "I want to see the session on $afternoon-session.",
                        "I am really interested in the session on $afternoon-session.",
                        "Can you schedule me in to watch the session on $afternoon-session?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "variables": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-evening-session": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What session do you want to see in the evening? Your options are:\n\tProbabilistic Planning\n\tMulti-Agent Planning and Scheduling\n\tHierarchical Task Networks\n\tRewards in Reinforcement Learning"
            ],
            "condition": [
                [
                    "evening-session",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "set-evening-session",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "evening-session": {
                                "value": "$evening-session",
                                "variable": "evening-session",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share-evening-session",
                        "name": "get-evening-session_DETDUP_set-evening-session-EQ-valid",
                        "assignments": {
                            "$evening-session": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-evening-session_DETDUP_set-evening-session-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share-evening-session": {
                    "variables": [
                        "$evening-session"
                    ],
                    "utterances": [
                        "$evening-session",
                        "I want to see the session on $evening-session.",
                        "I am really interested in the session on $evening-session.",
                        "Can you schedule me in to watch the session on $evening-session?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "variables": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "complete": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "disable-fallback": true,
            "message_variants": [
                "Below is your generated schedule: \n\tInvited Talk: $invited-talk \n\tMorning Session: $morning-session \n\tEarly Afternoon Session: $early-afternoon-session \n\tAfternoon Session: $afternoon-session \n\tEvening Session: $evening-session Enjoy your day!"
            ],
            "condition": [
                [
                    "invited-talk",
                    "Known"
                ],
                [
                    "morning-session",
                    "Known"
                ],
                [
                    "early-afternoon-session",
                    "Known"
                ],
                [
                    "afternoon-session",
                    "Known"
                ],
                [
                    "evening-session",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "goal",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "goal": {
                                "value": true,
                                "variable": "goal",
                                "interpretation": "json"
                            }
                        },
                        "intent": "thank",
                        "name": "complete_DETDUP_goal-EQ-valid",
                        "assignments": {}
                    }
                ]
            },
            "intents": {
                "thank": {
                    "variables": [],
                    "utterances": [
                        "Thank you!",
                        "Thanks!",
                        "thank",
                        "thanks so much!",
                        "have a good day!",
                        "have a good night!",
                        "thx",
                        "ty"
                    ],
                    "type": "regular"
                }
            }
        },
        "dialogue_statement": {
            "type": "dialogue",
            "condition": [
                [
                    "have-message",
                    true
                ],
                [
                    "force-statement",
                    true
                ]
            ],
            "effect": {
                "global-outcome-name": "reset",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "have-message": {
                                "value": false,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": false,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "utter_msg",
                        "name": "dialogue_statement_DETDUP_reset-EQ-lock",
                        "assignments": {}
                    }
                ]
            },
            "message_variants": [],
            "intents": {
                "utter_msg": {
                    "variables": [],
                    "utterances": [],
                    "type": "regular"
                }
            }
        }
    }
}

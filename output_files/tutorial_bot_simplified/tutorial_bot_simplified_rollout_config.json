{
    "actions": {
        "get-cuisine": {
            "condition": [
                "NegatedAtom force-statement()",
                "NegatedAtom have_cuisine()"
            ],
            "effect": {
                "get-cuisine_DETDUP_set-cuisine-EQ-valid": [
                    "Atom have_cuisine()"
                ],
                "get-cuisine_DETDUP_set-cuisine-EQ-fallback": [
                    "Atom force-statement()",
                    "Atom have-message()"
                ]
            }
        },
        "get-have-allergy": {
            "condition": [
                "NegatedAtom have_have_allergy()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "get-have-allergy_DETDUP_set-allergy-EQ-indicate_allergy": [
                    "Atom have_allergy()",
                    "Atom have_have_allergy()"
                ],
                "get-have-allergy_DETDUP_set-allergy-EQ-indicate_no_allergy": [
                    "Atom have_conflict()",
                    "NegatedAtom have_allergy()",
                    "Atom have_have_allergy()",
                    "NegatedAtom conflict()"
                ],
                "get-have-allergy_DETDUP_set-allergy-EQ-fallback": [
                    "Atom force-statement()",
                    "Atom have-message()"
                ]
            }
        },
        "get-allergy": {
            "condition": [
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "get-allergy_DETDUP_set-allergy-EQ-update_allergy": [
                    "Atom have_food_restriction()"
                ],
                "get-allergy_DETDUP_set-allergy-EQ-fallback": [
                    "Atom force-statement()",
                    "Atom have-message()"
                ]
            }
        },
        "reset-preferences": {
            "condition": [
                "Atom have_conflict()",
                "Atom conflict()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "reset-preferences_DETDUP_reset-EQ-reset-values": [
                    "NegatedAtom cuisine-value-dessert()",
                    "NegatedAtom food_restriction-value-gluten-free()",
                    "NegatedAtom have_food_restriction()",
                    "NegatedAtom have_cuisine()",
                    "NegatedAtom have_have_allergy()",
                    "Atom force-statement()",
                    "NegatedAtom food_restriction-value-dairy-free()",
                    "NegatedAtom cuisine-value-italian()",
                    "NegatedAtom cuisine-value-mexican()",
                    "NegatedAtom cuisine-value-chinese()",
                    "NegatedAtom have_conflict()",
                    "Atom have-message()"
                ]
            }
        },
        "set-restaurant": {
            "condition": [
                "Atom have_cuisine()",
                "NegatedAtom conflict()",
                "Atom have_conflict()",
                "NegatedAtom have_restaurant()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "set-restaurant_DETDUP_assign_restaurant-EQ-set-mexican": [
                    "Atom have_restaurant()"
                ],
                "set-restaurant_DETDUP_assign_restaurant-EQ-set-italian": [
                    "Atom have_restaurant()"
                ],
                "set-restaurant_DETDUP_assign_restaurant-EQ-set-chinese": [
                    "Atom have_restaurant()"
                ],
                "set-restaurant_DETDUP_assign_restaurant-EQ-set-dessert": [
                    "Atom have_restaurant()"
                ]
            }
        },
        "complete": {
            "condition": [
                "Atom have_restaurant()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "complete_DETDUP_finish-EQ-finish": [
                    "Atom have_goal()",
                    "Atom goal()"
                ]
            }
        },
        "dialogue_statement": {
            "condition": [
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "effect": {
                "dialogue_statement_DETDUP_reset-EQ-lock": [
                    "NegatedAtom have-message()",
                    "NegatedAtom force-statement()"
                ]
            }
        },
        "check-conflict-1-or-1": {
            "condition": [
                "Atom food_restriction-value-gluten-free()",
                "Atom cuisine-value-mexican()",
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "check-conflict-1-or-1_DETDUP_check-conflicts-EQ-validate-combos": [
                    "Atom have_conflict()",
                    "Atom conflict()"
                ]
            }
        },
        "check-conflict-1-or-2": {
            "condition": [
                "NegatedAtom force-statement()",
                "Atom cuisine-value-dessert()",
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "Atom food_restriction-value-dairy-free()"
            ],
            "effect": {
                "check-conflict-1-or-2_DETDUP_check-conflicts-EQ-validate-combos": [
                    "Atom have_conflict()",
                    "Atom conflict()"
                ]
            }
        },
        "check-conflict-2-or-1": {
            "condition": [
                "Atom have_food_restriction()",
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "Atom cuisine-value-italian()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "check-conflict-2-or-1_DETDUP_check-conflicts-EQ-validate-combos": [
                    "Atom have_conflict()",
                    "NegatedAtom conflict()"
                ]
            }
        },
        "check-conflict-2-or-2": {
            "condition": [
                "Atom cuisine-value-chinese()",
                "Atom have_food_restriction()",
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "check-conflict-2-or-2_DETDUP_check-conflicts-EQ-validate-combos": [
                    "Atom have_conflict()",
                    "NegatedAtom conflict()"
                ]
            }
        },
        "check-conflict-2-or-3": {
            "condition": [
                "NegatedAtom force-statement()",
                "Atom cuisine-value-mexican()",
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "Atom food_restriction-value-dairy-free()"
            ],
            "effect": {
                "check-conflict-2-or-3_DETDUP_check-conflicts-EQ-validate-combos": [
                    "Atom have_conflict()",
                    "NegatedAtom conflict()"
                ]
            }
        },
        "check-conflict-2-or-4": {
            "condition": [
                "Atom food_restriction-value-gluten-free()",
                "Atom cuisine-value-dessert()",
                "Atom have_allergy()",
                "Atom have_have_allergy()",
                "NegatedAtom force-statement()"
            ],
            "effect": {
                "check-conflict-2-or-4_DETDUP_check-conflicts-EQ-validate-combos": [
                    "Atom have_conflict()",
                    "NegatedAtom conflict()"
                ]
            }
        },
        "set-food_restriction": {
            "condition": [
                "NegatedAtom food_restriction-value-dairy-free()",
                "NegatedAtom food_restriction-value-gluten-free()",
                "Atom have_food_restriction()"
            ],
            "effect": {
                "set-food_restriction_DETDUP_set-valid-value-EQ-dairy-free": [
                    "Atom food_restriction-value-dairy-free()"
                ],
                "set-food_restriction_DETDUP_set-valid-value-EQ-gluten-free": [
                    "Atom food_restriction-value-gluten-free()"
                ]
            }
        },
        "set-cuisine": {
            "condition": [
                "Atom have_cuisine()",
                "NegatedAtom cuisine-value-dessert()",
                "NegatedAtom cuisine-value-italian()",
                "NegatedAtom cuisine-value-mexican()",
                "NegatedAtom cuisine-value-chinese()"
            ],
            "effect": {
                "set-cuisine_DETDUP_set-valid-value-EQ-mexican": [
                    "Atom cuisine-value-mexican()"
                ],
                "set-cuisine_DETDUP_set-valid-value-EQ-italian": [
                    "Atom cuisine-value-italian()"
                ],
                "set-cuisine_DETDUP_set-valid-value-EQ-chinese": [
                    "Atom cuisine-value-chinese()"
                ],
                "set-cuisine_DETDUP_set-valid-value-EQ-dessert": [
                    "Atom cuisine-value-dessert()"
                ]
            }
        }
    },
    "initial_state": [
        "NegatedAtom have_outing_atmosphere()",
        "NegatedAtom have_cuisine()",
        "NegatedAtom have_goal()",
        "NegatedAtom have_restaurant()",
        "NegatedAtom have_test_fflag()",
        "NegatedAtom cuisine-value-chinese()",
        "NegatedAtom have-message()",
        "NegatedAtom conflict()",
        "NegatedAtom goal()",
        "NegatedAtom cuisine-value-italian()",
        "NegatedAtom cuisine-value-mexican()",
        "NegatedAtom test_fflag()",
        "NegatedAtom food_restriction-value-gluten-free()",
        "NegatedAtom have_conflict()",
        "NegatedAtom force-statement()",
        "NegatedAtom maybe-have_test_fflag()",
        "NegatedAtom have_food_restriction()",
        "NegatedAtom food_restriction-value-dairy-free()",
        "NegatedAtom have_allergy()",
        "NegatedAtom have_low_budget()",
        "NegatedAtom cuisine-value-dessert()",
        "NegatedAtom have_have_allergy()",
        "NegatedAtom low_budget()"
    ]
}
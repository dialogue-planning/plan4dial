:py:mod:`plan4dial.generate_files.parsers.parse_for_rasa`
=========================================================

.. py:module:: plan4dial.generate_files.parsers.parse_for_rasa

.. autoapi-nested-parse::

   This module contains all the functions necessary to generate a NLU file
   that Rasa can use to extract intents and entities.

   NOTE: We use a bare-bones specification so we rely on Rasa as little as
   possible (no roles, groups, stories, or anything too "Rasa-specific").

   Authors:
       Rebecca De Venezia



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   plan4dial.generate_files.parsers.parse_for_rasa._create_intent_example
   plan4dial.generate_files.parsers.parse_for_rasa.make_nlu_file



.. py:function:: _create_intent_example(extracted_value: str, entity: str, true_value: Union[str, None] = None) -> str

   Create an intent example according to the Rasa NLU format. Also accounts for synonyms/variations if specified, while mapping back to the "true" value that we want to set to.

   :param extracted_value: The value that was extracted.
   :type extracted_value: str
   :param entity: The entity we are trying to extract.
   :type entity: str
   :param true_value: If we extracted a variation, this is the "true" value that we want to set the extraction to. Defaults to None, in which case we know that the true value was what was extracted.
   :type true_value: str or None

   :returns: The intent example.
   :rtype: str


.. py:function:: make_nlu_file(loaded_yaml: Dict) -> Dict

   Generates the NLU configuration that Rasa requires to extract intents and entities.

   :param loaded_yaml: The loaded YAML configuration.
   :type loaded_yaml: Dict

   :returns: The NLU configuration for Rasa.
   :rtype: Dict



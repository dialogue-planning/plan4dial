{
    "name": "order-pizza",
    "context_variables": {
        "base": {
            "type": "enum",
            "config": {
                "tomato sauce": {
                    "variations": [
                        "tomatoe sauce"
                    ]
                },
                "alfredo sauce": {
                    "variations": [
                        "white sauce",
                        "cream sauce"
                    ]
                },
                "barbecue sauce": {
                    "variations": [
                        "bbq sauce"
                    ]
                },
                "pesto": {
                    "variations": [
                        "green pesto"
                    ]
                },
                "ranch": {
                    "variations": [
                        "caesar sauce"
                    ]
                }
            },
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "size": {
            "type": "enum",
            "config": [
                "small",
                "medium",
                "large"
            ],
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "toppings": {
            "type": "enum",
            "config": {
                "pepperoni": {
                    "variations": [
                        "peperoni",
                        "meat",
                        "sausage"
                    ]
                },
                "mushrooms": {
                    "variations": [
                        "vegetable",
                        "veggie",
                        "musroom",
                        "shroom"
                    ]
                },
                "hawaiian": {
                    "variations": [
                        "pineapple",
                        "ham and pineapple",
                        "sweet"
                    ]
                },
                "olives": {
                    "variations": [
                        "green olives",
                        "black olives"
                    ]
                },
                "tomatoes": {
                    "variations": [
                        "tomatos"
                    ]
                },
                "peppers": {
                    "variations": [
                        "bell peppers",
                        "green peppers",
                        "red peppers"
                    ]
                }
            },
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "drink": {
            "type": "enum",
            "config": {
                "coke": {
                    "variations": [
                        "coke",
                        "coca cola",
                        "soda",
                        "pop"
                    ]
                },
                "coffee": {
                    "variations": [
                        "caffeine",
                        "decaf",
                        "espresso"
                    ]
                }
            },
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "side": {
            "type": "enum",
            "config": {
                "fries": {
                    "variations": [
                        "french fries",
                        "potato wedges",
                        "crisps",
                        "chips"
                    ]
                },
                "salad": {
                    "variations": [
                        "healthy side",
                        "lettuce and tomatoes",
                        "greek salad",
                        "caesar salad"
                    ]
                }
            },
            "known": {
                "type": "flag",
                "init": false
            }
        },
        "goal": {
            "type": "flag",
            "config": false
        },
        "have-message": {
            "type": "flag",
            "config": false
        },
        "force-statement": {
            "type": "flag",
            "config": false
        }
    },
    "intents": {
        "thank": {
            "entities": [],
            "utterances": [
                "Thank you!",
                "Thanks!",
                "thank",
                "thanks so much!",
                "have a good day!",
                "have a good night!",
                "thx",
                "ty"
            ],
            "type": "regular"
        },
        "share_base": {
            "entities": [],
            "utterances": [
                "I want a pizza with a $base base",
                "I would prefer a pizza with a $base base.",
                "Do you have $base for a base?"
            ],
            "type": "regular"
        },
        "share_size": {
            "entities": [],
            "utterances": [
                "I want a $size pizza.",
                "I would prefer a $size pizza.",
                "Can I get a $size pizza?"
            ],
            "type": "regular"
        },
        "share_toppings": {
            "entities": [],
            "utterances": [
                "I want a pizza with $toppings",
                "I would prefer a pizza with $toppings.",
                "Do you have $toppings?",
                "Can I get a pizza with $toppings?"
            ],
            "type": "regular"
        },
        "share_drink": {
            "entities": [],
            "utterances": [
                "I want to drink $drink.",
                "$drink with ice please!",
                "Do you have $drink kind of drink?"
            ],
            "type": "regular"
        },
        "share_side": {
            "entities": [],
            "utterances": [
                "I want to have $side on the side.",
                "$side on the side please!",
                "Do you have $side available as a side option?"
            ],
            "type": "regular"
        },
        "fallback": {
            "entities": [],
            "utterances": [],
            "type": "fallback"
        },
        "utter_ds": {
            "entities": [],
            "utterances": [],
            "type": "regular"
        }
    },
    "actions": {
        "get-base": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What base do you want for your pizza?"
            ],
            "condition": [
                [
                    "base",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-base__set-base",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "base": {
                                "value": "$base",
                                "variable": "base",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share_base",
                        "name": "get-base_DETDUP_get-base__set-base-EQ-valid",
                        "assignments": {
                            "$base": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-base_DETDUP_get-base__set-base-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share_base": {
                    "entities": [],
                    "utterances": [
                        "I want a pizza with a $base base",
                        "I would prefer a pizza with a $base base.",
                        "Do you have $base for a base?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-toppings": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What toppings do you want for your pizza?"
            ],
            "condition": [
                [
                    "toppings",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-toppings__set-toppings",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "toppings": {
                                "value": "$toppings",
                                "variable": "toppings",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share_toppings",
                        "name": "get-toppings_DETDUP_get-toppings__set-toppings-EQ-valid",
                        "assignments": {
                            "$toppings": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-toppings_DETDUP_get-toppings__set-toppings-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share_toppings": {
                    "entities": [],
                    "utterances": [
                        "I want a pizza with $toppings",
                        "I would prefer a pizza with $toppings.",
                        "Do you have $toppings?",
                        "Can I get a pizza with $toppings?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-size": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What size do you want your pizza to be?"
            ],
            "condition": [
                [
                    "size",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-size__set-size",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "size": {
                                "value": "$size",
                                "variable": "size",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share_size",
                        "name": "get-size_DETDUP_get-size__set-size-EQ-valid",
                        "assignments": {
                            "$size": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-size_DETDUP_get-size__set-size-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share_size": {
                    "entities": [],
                    "utterances": [
                        "I want a $size pizza.",
                        "I would prefer a $size pizza.",
                        "Can I get a $size pizza?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-drink": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What drink do you want with your order?"
            ],
            "condition": [
                [
                    "drink",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-drink__set-drink",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "drink": {
                                "value": "$drink",
                                "variable": "drink",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share_drink",
                        "name": "get-drink_DETDUP_get-drink__set-drink-EQ-valid",
                        "assignments": {
                            "$drink": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-drink_DETDUP_get-drink__set-drink-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share_drink": {
                    "entities": [],
                    "utterances": [
                        "I want to drink $drink.",
                        "$drink with ice please!",
                        "Do you have $drink kind of drink?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "get-side": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "message_variants": [
                "What side do you want with your order?"
            ],
            "condition": [
                [
                    "side",
                    "Unknown"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "get-side__set-side",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "side": {
                                "value": "$side",
                                "variable": "side",
                                "certainty": "Known",
                                "interpretation": "json"
                            }
                        },
                        "intent": "share_side",
                        "name": "get-side_DETDUP_get-side__set-side-EQ-valid",
                        "assignments": {
                            "$side": "found"
                        }
                    },
                    {
                        "updates": {
                            "have-message": {
                                "value": true,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": true,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "fallback",
                        "name": "get-side_DETDUP_get-side__set-side-EQ-fallback",
                        "assignments": {}
                    }
                ]
            },
            "fallback_message_variants": [
                "Sorry, I couldn't understand that input.",
                "Sorry, I didn't quite get that."
            ],
            "intents": {
                "share_side": {
                    "entities": [],
                    "utterances": [
                        "I want to have $side on the side.",
                        "$side on the side please!",
                        "Do you have $side available as a side option?"
                    ],
                    "type": "regular"
                },
                "fallback": {
                    "entities": [],
                    "utterances": [],
                    "type": "fallback"
                }
            }
        },
        "complete": {
            "type": "dialogue",
            "subtype": "dialogue disambiguation",
            "disable-fallback": true,
            "message_variants": [
                "Ordering a pizza of size $size with $base as a base and $toppings as toppings, as well as a $drink and $side."
            ],
            "condition": [
                [
                    "base",
                    "Known"
                ],
                [
                    "size",
                    "Known"
                ],
                [
                    "toppings",
                    "Known"
                ],
                [
                    "drink",
                    "Known"
                ],
                [
                    "side",
                    "Known"
                ],
                [
                    "force-statement",
                    false
                ]
            ],
            "effect": {
                "global-outcome-name": "complete__goal",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "goal": {
                                "value": true,
                                "variable": "goal",
                                "interpretation": "json"
                            }
                        },
                        "intent": "thank",
                        "name": "complete_DETDUP_complete__goal-EQ-valid",
                        "assignments": {}
                    }
                ]
            },
            "intents": {
                "thank": {
                    "entities": [],
                    "utterances": [
                        "Thank you!",
                        "Thanks!",
                        "thank",
                        "thanks so much!",
                        "have a good day!",
                        "have a good night!",
                        "thx",
                        "ty"
                    ],
                    "type": "regular"
                }
            }
        },
        "dialogue_statement": {
            "type": "dialogue",
            "condition": [
                [
                    "have-message",
                    true
                ],
                [
                    "force-statement",
                    true
                ]
            ],
            "effect": {
                "global-outcome-name": "dialogue_statement__reset",
                "type": "oneof",
                "outcomes": [
                    {
                        "updates": {
                            "have-message": {
                                "value": false,
                                "variable": "have-message",
                                "interpretation": "json"
                            },
                            "force-statement": {
                                "value": false,
                                "variable": "force-statement",
                                "interpretation": "json"
                            }
                        },
                        "intent": "utter_ds",
                        "name": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "assignments": {}
                    }
                ]
            },
            "message_variants": [],
            "intents": {
                "utter_ds": {
                    "entities": [],
                    "utterances": [],
                    "type": "regular"
                }
            }
        }
    }
}
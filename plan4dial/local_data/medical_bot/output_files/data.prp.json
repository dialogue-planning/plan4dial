{
    "plan": {
        "init": "34",
        "goal": "0",
        "nodes": {
            "0": {
                "expected_successor": false,
                "action": "---",
                "state": "0x8c3590",
                "distance": 0,
                "is_relevant": 1,
                "is_goal": 1,
                "is_sc": 1,
                "successors": []
            },
            "3": {
                "expected_successor": "2",
                "action": "dialogue_statement",
                "state": "0x8e5b00",
                "distance": 3,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "2"
                    }
                ]
            },
            "4": {
                "expected_successor": "3",
                "action": "determine_covid_test",
                "state": "0x8e6370",
                "distance": 4,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-no-symptoms-30",
                        "successor_id": "3"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-no-symptoms-90",
                        "successor_id": "3"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-symptoms-30",
                        "successor_id": "3"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-symptoms-90",
                        "successor_id": "3"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-symptoms-no-90",
                        "successor_id": "3"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-no-symptom-exposed-been-5",
                        "successor_id": "3"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-no-symptom-exposed-less-5",
                        "successor_id": "3"
                    }
                ]
            },
            "2": {
                "expected_successor": "1",
                "action": "got-covid-diag",
                "state": "0x8dc840",
                "distance": 2,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "got-covid-diag_DETDUP_got-covid-diag__check-test-EQ-complete",
                        "successor_id": "1"
                    }
                ]
            },
            "1": {
                "expected_successor": "0",
                "action": "complete",
                "state": "0x8e4f40",
                "distance": 1,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "complete_DETDUP_complete__finish-EQ-finish",
                        "successor_id": "0"
                    }
                ]
            },
            "14": {
                "expected_successor": "4",
                "action": "slot-fill__get_positive_90",
                "state": "0x8ebcf0",
                "distance": 5,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_positive_90_DETDUP_slot-fill__get_positive_90__get-response-EQ-confirm_outcome",
                        "successor_id": "4"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_90_DETDUP_slot-fill__get_positive_90__get-response-EQ-deny_outcome",
                        "successor_id": "4"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_90_DETDUP_slot-fill__get_positive_90__get-response-EQ-fallback",
                        "successor_id": "24"
                    }
                ]
            },
            "15": {
                "expected_successor": "4",
                "action": "slot-fill__get_positive_30",
                "state": "0x8ebf90",
                "distance": 5,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_positive_30_DETDUP_slot-fill__get_positive_30__get-response-EQ-confirm_outcome",
                        "successor_id": "4"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_30_DETDUP_slot-fill__get_positive_30__get-response-EQ-deny_outcome",
                        "successor_id": "14"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_30_DETDUP_slot-fill__get_positive_30__get-response-EQ-fallback",
                        "successor_id": "23"
                    }
                ]
            },
            "16": {
                "expected_successor": "15",
                "action": "slot-fill__get_exposure_period",
                "state": "0x8eaca0",
                "distance": 6,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_exposure_period_DETDUP_slot-fill__get_exposure_period__get-response-EQ-confirm_outcome",
                        "successor_id": "15"
                    },
                    {
                        "outcome_label": "slot-fill__get_exposure_period_DETDUP_slot-fill__get_exposure_period__get-response-EQ-deny_outcome",
                        "successor_id": "15"
                    },
                    {
                        "outcome_label": "slot-fill__get_exposure_period_DETDUP_slot-fill__get_exposure_period__get-response-EQ-fallback",
                        "successor_id": "25"
                    }
                ]
            },
            "23": {
                "expected_successor": "15",
                "action": "dialogue_statement",
                "state": "0x8ed250",
                "distance": 6,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "15"
                    }
                ]
            },
            "25": {
                "expected_successor": "16",
                "action": "dialogue_statement",
                "state": "0x8efd40",
                "distance": 7,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "16"
                    }
                ]
            },
            "24": {
                "expected_successor": "14",
                "action": "dialogue_statement",
                "state": "0x8ed5b0",
                "distance": 6,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "14"
                    }
                ]
            },
            "30": {
                "expected_successor": "29",
                "action": "slot-fill__get_sickness_period",
                "state": "0x8f77a0",
                "distance": 8,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_sickness_period_DETDUP_slot-fill__get_sickness_period__get-response-EQ-confirm_outcome",
                        "successor_id": "29"
                    },
                    {
                        "outcome_label": "slot-fill__get_sickness_period_DETDUP_slot-fill__get_sickness_period__get-response-EQ-deny_outcome",
                        "successor_id": "29"
                    },
                    {
                        "outcome_label": "slot-fill__get_sickness_period_DETDUP_slot-fill__get_sickness_period__get-response-EQ-fallback",
                        "successor_id": "50"
                    }
                ]
            },
            "31": {
                "expected_successor": "30",
                "action": "get_symptoms",
                "state": "0x8f0e00",
                "distance": 9,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "get_symptoms_DETDUP_get_symptoms__get-symptoms-EQ-fallback",
                        "successor_id": "32"
                    },
                    {
                        "outcome_label": "get_symptoms_DETDUP_get_symptoms__get-symptoms-EQ-share-covid",
                        "successor_id": "30"
                    },
                    {
                        "outcome_label": "get_symptoms_DETDUP_get_symptoms__get-symptoms-EQ-share-rash",
                        "successor_id": "30"
                    },
                    {
                        "outcome_label": "get_symptoms_DETDUP_get_symptoms__get-symptoms-EQ-share-teeth",
                        "successor_id": "30"
                    }
                ]
            },
            "32": {
                "expected_successor": "31",
                "action": "dialogue_statement",
                "state": "0x8f0ff0",
                "distance": 10,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "31"
                    }
                ]
            },
            "33": {
                "expected_successor": "32",
                "action": "slot-fill__get_have_symptoms",
                "state": "0x8f1230",
                "distance": 11,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_have_symptoms_DETDUP_slot-fill__get_have_symptoms__get-response-EQ-confirm_outcome",
                        "successor_id": "32"
                    },
                    {
                        "outcome_label": "slot-fill__get_have_symptoms_DETDUP_slot-fill__get_have_symptoms__get-response-EQ-deny_outcome",
                        "successor_id": "52"
                    },
                    {
                        "outcome_label": "slot-fill__get_have_symptoms_DETDUP_slot-fill__get_have_symptoms__get-response-EQ-fallback",
                        "successor_id": "51"
                    }
                ]
            },
            "34": {
                "expected_successor": "33",
                "action": "slot-fill__get_covid_exposure",
                "state": "0x8f1470",
                "distance": 12,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_covid_exposure_DETDUP_slot-fill__get_covid_exposure__get-response-EQ-confirm_outcome",
                        "successor_id": "33"
                    },
                    {
                        "outcome_label": "slot-fill__get_covid_exposure_DETDUP_slot-fill__get_covid_exposure__get-response-EQ-deny_outcome",
                        "successor_id": "33"
                    },
                    {
                        "outcome_label": "slot-fill__get_covid_exposure_DETDUP_slot-fill__get_covid_exposure__get-response-EQ-fallback",
                        "successor_id": "54"
                    }
                ]
            },
            "35": {
                "expected_successor": "1",
                "action": "got-both-diags",
                "state": "0x8f1490",
                "distance": 2,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "got-both-diags_DETDUP_got-both-diags__check-test-EQ-complete",
                        "successor_id": "1"
                    }
                ]
            },
            "36": {
                "expected_successor": "35",
                "action": "dialogue_statement",
                "state": "0x8f2ef0",
                "distance": 3,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "35"
                    }
                ]
            },
            "37": {
                "expected_successor": "36",
                "action": "determine_covid_test",
                "state": "0x8f1db0",
                "distance": 4,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-no-symptoms-30",
                        "successor_id": "36"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-no-symptoms-90",
                        "successor_id": "36"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-symptoms-30",
                        "successor_id": "36"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-symptoms-90",
                        "successor_id": "36"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-have-symptoms-no-90",
                        "successor_id": "36"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-no-symptom-exposed-been-5",
                        "successor_id": "36"
                    },
                    {
                        "outcome_label": "determine_covid_test_DETDUP_determine_covid_test__check-test-EQ-no-symptom-exposed-less-5",
                        "successor_id": "36"
                    }
                ]
            },
            "29": {
                "expected_successor": "16",
                "action": "progress_symptoms_cases",
                "state": "0x8f07a0",
                "distance": 7,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "progress_symptoms_cases_DETDUP_progress_symptoms_cases__check-test-EQ-covid",
                        "successor_id": "16"
                    },
                    {
                        "outcome_label": "progress_symptoms_cases_DETDUP_progress_symptoms_cases__check-test-EQ-rash-covid",
                        "successor_id": "47"
                    },
                    {
                        "outcome_label": "progress_symptoms_cases_DETDUP_progress_symptoms_cases__check-test-EQ-rash-no-covid",
                        "successor_id": "28"
                    },
                    {
                        "outcome_label": "progress_symptoms_cases_DETDUP_progress_symptoms_cases__check-test-EQ-teeth-covid",
                        "successor_id": "47"
                    },
                    {
                        "outcome_label": "progress_symptoms_cases_DETDUP_progress_symptoms_cases__check-test-EQ-teeth-no-covid",
                        "successor_id": "28"
                    }
                ]
            },
            "27": {
                "expected_successor": "26",
                "action": "dialogue_statement",
                "state": "0x8f7a40",
                "distance": 3,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "26"
                    }
                ]
            },
            "26": {
                "expected_successor": "1",
                "action": "got-reg-diag",
                "state": "0x8edb50",
                "distance": 2,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "got-reg-diag_DETDUP_got-reg-diag__check-test-EQ-complete",
                        "successor_id": "1"
                    }
                ]
            },
            "28": {
                "expected_successor": "27",
                "action": "diagnose_regular_sickness",
                "state": "0x8e0e30",
                "distance": 4,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "diagnose_regular_sickness_DETDUP_diagnose_regular_sickness__check-test-EQ-rash-over",
                        "successor_id": "27"
                    },
                    {
                        "outcome_label": "diagnose_regular_sickness_DETDUP_diagnose_regular_sickness__check-test-EQ-rash-under",
                        "successor_id": "27"
                    },
                    {
                        "outcome_label": "diagnose_regular_sickness_DETDUP_diagnose_regular_sickness__check-test-EQ-teeth",
                        "successor_id": "27"
                    }
                ]
            },
            "44": {
                "expected_successor": "37",
                "action": "slot-fill__get_positive_30",
                "state": "0x8faa00",
                "distance": 5,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_positive_30_DETDUP_slot-fill__get_positive_30__get-response-EQ-confirm_outcome",
                        "successor_id": "37"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_30_DETDUP_slot-fill__get_positive_30__get-response-EQ-deny_outcome",
                        "successor_id": "43"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_30_DETDUP_slot-fill__get_positive_30__get-response-EQ-fallback",
                        "successor_id": "48"
                    }
                ]
            },
            "43": {
                "expected_successor": "37",
                "action": "slot-fill__get_positive_90",
                "state": "0x8fb510",
                "distance": 5,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_positive_90_DETDUP_slot-fill__get_positive_90__get-response-EQ-confirm_outcome",
                        "successor_id": "37"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_90_DETDUP_slot-fill__get_positive_90__get-response-EQ-deny_outcome",
                        "successor_id": "37"
                    },
                    {
                        "outcome_label": "slot-fill__get_positive_90_DETDUP_slot-fill__get_positive_90__get-response-EQ-fallback",
                        "successor_id": "49"
                    }
                ]
            },
            "45": {
                "expected_successor": "44",
                "action": "slot-fill__get_exposure_period",
                "state": "0x8fb5f0",
                "distance": 6,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "slot-fill__get_exposure_period_DETDUP_slot-fill__get_exposure_period__get-response-EQ-confirm_outcome",
                        "successor_id": "44"
                    },
                    {
                        "outcome_label": "slot-fill__get_exposure_period_DETDUP_slot-fill__get_exposure_period__get-response-EQ-deny_outcome",
                        "successor_id": "44"
                    },
                    {
                        "outcome_label": "slot-fill__get_exposure_period_DETDUP_slot-fill__get_exposure_period__get-response-EQ-fallback",
                        "successor_id": "46"
                    }
                ]
            },
            "46": {
                "expected_successor": "45",
                "action": "dialogue_statement",
                "state": "0x8fb730",
                "distance": 7,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "45"
                    }
                ]
            },
            "47": {
                "expected_successor": "46",
                "action": "diagnose_regular_sickness",
                "state": "0x8fb890",
                "distance": 8,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "diagnose_regular_sickness_DETDUP_diagnose_regular_sickness__check-test-EQ-rash-over",
                        "successor_id": "46"
                    },
                    {
                        "outcome_label": "diagnose_regular_sickness_DETDUP_diagnose_regular_sickness__check-test-EQ-rash-under",
                        "successor_id": "46"
                    },
                    {
                        "outcome_label": "diagnose_regular_sickness_DETDUP_diagnose_regular_sickness__check-test-EQ-teeth",
                        "successor_id": "46"
                    }
                ]
            },
            "48": {
                "expected_successor": "44",
                "action": "dialogue_statement",
                "state": "0x8fba10",
                "distance": 6,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "44"
                    }
                ]
            },
            "49": {
                "expected_successor": "43",
                "action": "dialogue_statement",
                "state": "0x8f3a30",
                "distance": 6,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "43"
                    }
                ]
            },
            "50": {
                "expected_successor": "30",
                "action": "dialogue_statement",
                "state": "0x8fd880",
                "distance": 9,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "30"
                    }
                ]
            },
            "51": {
                "expected_successor": "33",
                "action": "dialogue_statement",
                "state": "0x900090",
                "distance": 12,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "33"
                    }
                ]
            },
            "54": {
                "expected_successor": "34",
                "action": "dialogue_statement",
                "state": "0x908b70",
                "distance": 13,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "34"
                    }
                ]
            },
            "52": {
                "expected_successor": "25",
                "action": "progress_no_symptoms_cases",
                "state": "0x907a20",
                "distance": 8,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "progress_no_symptoms_cases_DETDUP_progress_no_symptoms_cases__check-test-EQ-no-exposure-no-symptoms",
                        "successor_id": "53"
                    },
                    {
                        "outcome_label": "progress_no_symptoms_cases_DETDUP_progress_no_symptoms_cases__check-test-EQ-proceed",
                        "successor_id": "25"
                    }
                ]
            },
            "53": {
                "expected_successor": "1",
                "action": "dialogue_statement",
                "state": "0x908e40",
                "distance": 2,
                "is_relevant": 0,
                "is_goal": 0,
                "is_sc": 1,
                "successors": [
                    {
                        "outcome_label": "dialogue_statement_DETDUP_dialogue_statement__reset-EQ-lock",
                        "successor_id": "1"
                    }
                ]
            }
        },
        "edges": [
            [
                "3",
                ">",
                "2"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "4",
                ">",
                "3"
            ],
            [
                "2",
                ">",
                "1"
            ],
            [
                "1",
                ">",
                "0"
            ],
            [
                "14",
                ">",
                "4"
            ],
            [
                "14",
                ">",
                "4"
            ],
            [
                "14",
                ">",
                "24"
            ],
            [
                "15",
                ">",
                "4"
            ],
            [
                "15",
                ">",
                "14"
            ],
            [
                "15",
                ">",
                "23"
            ],
            [
                "16",
                ">",
                "15"
            ],
            [
                "16",
                ">",
                "15"
            ],
            [
                "16",
                ">",
                "25"
            ],
            [
                "23",
                ">",
                "15"
            ],
            [
                "25",
                ">",
                "16"
            ],
            [
                "24",
                ">",
                "14"
            ],
            [
                "30",
                ">",
                "29"
            ],
            [
                "30",
                ">",
                "29"
            ],
            [
                "30",
                ">",
                "50"
            ],
            [
                "31",
                ">",
                "32"
            ],
            [
                "31",
                ">",
                "30"
            ],
            [
                "31",
                ">",
                "30"
            ],
            [
                "31",
                ">",
                "30"
            ],
            [
                "32",
                ">",
                "31"
            ],
            [
                "33",
                ">",
                "32"
            ],
            [
                "33",
                ">",
                "52"
            ],
            [
                "33",
                ">",
                "51"
            ],
            [
                "34",
                ">",
                "33"
            ],
            [
                "34",
                ">",
                "33"
            ],
            [
                "34",
                ">",
                "54"
            ],
            [
                "35",
                ">",
                "1"
            ],
            [
                "36",
                ">",
                "35"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "37",
                ">",
                "36"
            ],
            [
                "29",
                ">",
                "16"
            ],
            [
                "29",
                ">",
                "47"
            ],
            [
                "29",
                ">",
                "28"
            ],
            [
                "29",
                ">",
                "47"
            ],
            [
                "29",
                ">",
                "28"
            ],
            [
                "27",
                ">",
                "26"
            ],
            [
                "26",
                ">",
                "1"
            ],
            [
                "28",
                ">",
                "27"
            ],
            [
                "28",
                ">",
                "27"
            ],
            [
                "28",
                ">",
                "27"
            ],
            [
                "44",
                ">",
                "37"
            ],
            [
                "44",
                ">",
                "43"
            ],
            [
                "44",
                ">",
                "48"
            ],
            [
                "43",
                ">",
                "37"
            ],
            [
                "43",
                ">",
                "37"
            ],
            [
                "43",
                ">",
                "49"
            ],
            [
                "45",
                ">",
                "44"
            ],
            [
                "45",
                ">",
                "44"
            ],
            [
                "45",
                ">",
                "46"
            ],
            [
                "46",
                ">",
                "45"
            ],
            [
                "47",
                ">",
                "46"
            ],
            [
                "47",
                ">",
                "46"
            ],
            [
                "47",
                ">",
                "46"
            ],
            [
                "48",
                ">",
                "44"
            ],
            [
                "49",
                ">",
                "43"
            ],
            [
                "50",
                ">",
                "30"
            ],
            [
                "51",
                ">",
                "33"
            ],
            [
                "54",
                ">",
                "34"
            ],
            [
                "52",
                ">",
                "53"
            ],
            [
                "52",
                ">",
                "25"
            ],
            [
                "53",
                ">",
                "1"
            ]
        ],
        "states": {
            "0x8c3590": [
                "Atom goal()"
            ],
            "0x8e5b00": [
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "Atom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8e6370": [
                "Atom know__covid-exposure()",
                "Atom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "Atom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8dc840": [
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "Atom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8e4f40": [
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom completed-diagnostics()",
                "NegatedAtom force-statement()"
            ],
            "0x8ebcf0": [
                "Atom know__covid-exposure()",
                "Atom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "NegatedAtom positive-30()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8ebf90": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8eaca0": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8ed250": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8efd40": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8ed5b0": [
                "Atom know__covid-exposure()",
                "Atom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "NegatedAtom positive-30()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "NegatedAtom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8f77a0": [
                "Atom know__covid-exposure()",
                "Atom have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f0e00": [
                "Atom know__covid-exposure()",
                "Atom have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "NegatedAtom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f0ff0": [
                "Atom know__covid-exposure()",
                "Atom have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "NegatedAtom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8f1230": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "NegatedAtom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f1470": [
                "NegatedAtom know__covid-exposure()",
                "NegatedAtom know__have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "NegatedAtom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f1490": [
                "Atom ran-reg-diag()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "Atom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f2ef0": [
                "Atom ran-reg-diag()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "Atom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8f1db0": [
                "Atom know__covid-exposure()",
                "Atom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "Atom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f07a0": [
                "Atom know__covid-exposure()",
                "Atom have-symptoms()",
                "Atom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8f7a40": [
                "Atom ran-reg-diag()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "NegatedAtom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8edb50": [
                "Atom ran-reg-diag()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "NegatedAtom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom force-statement()"
            ],
            "0x8e0e30": [
                "Atom know__over-week()",
                "NegatedAtom ran-reg-diag()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "NegatedAtom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom force-statement()"
            ],
            "0x8faa00": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8fb510": [
                "Atom know__covid-exposure()",
                "Atom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "NegatedAtom positive-30()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8fb5f0": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8fb730": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8fb890": [
                "Atom know__covid-exposure()",
                "Atom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x8fba10": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8f3a30": [
                "Atom know__covid-exposure()",
                "Atom know__positive-30()",
                "Atom know__exposure-period-over-5()",
                "Atom ran-reg-diag()",
                "NegatedAtom positive-30()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom know__need-covid-diag()",
                "Atom know__need-reg-diag()",
                "Atom need-covid-diag()",
                "Atom need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x8fd880": [
                "Atom know__covid-exposure()",
                "Atom have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x900090": [
                "Atom know__covid-exposure()",
                "NegatedAtom know__have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "NegatedAtom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x908b70": [
                "NegatedAtom know__covid-exposure()",
                "NegatedAtom know__have-symptoms()",
                "NegatedAtom know__over-week()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom ran-reg-diag()",
                "NegatedAtom know__positive-90()",
                "NegatedAtom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom know__need-reg-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "Atom force-statement()",
                "Atom have-message()"
            ],
            "0x907a20": [
                "Atom know__covid-exposure()",
                "Atom know__have-symptoms()",
                "NegatedAtom have-symptoms()",
                "NegatedAtom know__positive-30()",
                "NegatedAtom know__exposure-period-over-5()",
                "NegatedAtom know__positive-90()",
                "Atom know__symptoms()",
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "NegatedAtom know__need-covid-diag()",
                "NegatedAtom completed-diagnostics()",
                "NegatedAtom ran-covid-diag()",
                "NegatedAtom force-statement()"
            ],
            "0x908e40": [
                "NegatedAtom forcing__diagnose_regular_sickness()",
                "Atom completed-diagnostics()",
                "Atom force-statement()",
                "Atom have-message()"
            ]
        }
    }
}
